//==============================================================================
//
// ランキングロゴの描画処理〔ranking_logo.cpp〕
// Author : Mare Horiai
//
//==============================================================================
#include "main.h"
#include "scene2D.h"
#include "renderer.h"
#include "manager.h"
#include "polygon.h"
#include "sound.h"
#include "ranking.h"
#include "ranking_logo.h"

//==============================================================================
// コンストラクタ
//==============================================================================
CRankingLogo::CRankingLogo(int nPriority) : CScene(nPriority)
{
	// ポリゴンの初期化
	m_pPolygon = NULL;
}

//==============================================================================
// デストラクタ
//==============================================================================
CRankingLogo::~CRankingLogo()
{
}

//==============================================================================
// ランキングロゴの初期化処理
//==============================================================================
HRESULT CRankingLogo::Init(D3DXVECTOR3 pos)
{
	// メンバ変数の初期化
	m_pos = pos;

	// ポリゴン初期化
	if (m_pPolygon == NULL)
	{
		m_pPolygon = CPolygon::Create(D3DXVECTOR3(pos.x, pos.y, 0.0f),
			RANK_LOGO_SIZEX, RANK_LOGO_SIZEY,
			CTexture::TEXTYPE_RANKING_LOGO);

		// テクスチャ設定
		m_pPolygon->SetTex(1, 1, 0, 0, 0.0f, 0.0f);
	}

	return S_OK;
}

//==============================================================================
// ランキングロゴの終了処理
//==============================================================================
void CRankingLogo::Uninit(void)
{
	if (m_pPolygon != NULL)
	{// NULLチェック後に破棄
		m_pPolygon->Uninit();
		m_pPolygon = NULL;
	}

	Release();	// インスタンスのデリート
}

//==============================================================================
// ランキングロゴの更新処理
//==============================================================================
void CRankingLogo::Update(void)
{

}

//==============================================================================
// ランキングロゴの描画処理
//==============================================================================
void CRankingLogo::Draw(void)
{
	// ランキングロゴの描画
	if (m_pPolygon != NULL)
	{
		m_pPolygon->Draw();
	}
}

//==============================================================================
// ランキングロゴの生成処理
//==============================================================================
CRankingLogo *CRankingLogo::Create(D3DXVECTOR3 pos)
{
	// インスタンス生成
	CRankingLogo *pRankingLogo;
	pRankingLogo = new CRankingLogo;

	// 初期化
	pRankingLogo->Init(pos);

	return pRankingLogo;
}

//==============================================================================
// 位置の取得
//==============================================================================
D3DXVECTOR3 CRankingLogo::GetPosition(void)
{
	D3DXVECTOR3 pos;
	return pos;
}

//==============================================================================
// サイズの取得
//==============================================================================
D3DXVECTOR3 CRankingLogo::GetSize(void)
{
	D3DXVECTOR3 size;
	return size;
}